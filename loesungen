Aufgabe 1.3 

int, bool, char sind Typen
a, b, c sind die Variablem
9, false, 'a' sind die Werte

const ist schreibgeschütze Variable, dieser kann kein Wert zugewiesen werden --> Fehler bei two = d

Typkonvertierung von zwei int Werten in ein double, dabei gibt es keine Probleme, andersherum fallen zB. Kommastellen weg


Aufgabe 1.4

Initialisierung : Wenn eine Variable deklariert und definiert wurde kann ihr mittels der Initialisierung ein Anfangswert gesetzt werden.
Bsp.: int a = 1; Machen wir das nicht bekommt die Variable den vorgefertigten Wert aus dem Speicherbereich.

Zuweisung: Einer Variable wird ein Wert zugewiesen, das heißt ihr alter Wert bzw die Initialisierung wird überschrieben.
Bsp.: a = 5 oder a = b 

Unterschied ist initiale Zuweisung bei der Definition bzw ein späterer Wertzuweis einer Variable.

Aufgabe 1.5
Deklaration : Hier bennen wir eine Variable sodass der Compiler diese kennt, zum Beispiel MeinVariablenName

Definition : Wir weisen einer deklarierten Variable einen Speicherbereich zu, zum Beispiel int

int MeinVariablenName;

classb;

class c{
public:
Testklasse();
};


int eineFunktion(intx=42);

int eineFunktion(int x){
//Code
}

1.6
Signatur ist Name der Funktion und die Parameter
var ist überall gültig
a und b nur in der funktion sum
Zweites var innerhalb von square
i innerhalb der for- schleife


Aufgabe 1.13
C++: Wurde 1979 von Bjarne Stroustrup als Erweiterung von C entwickelt.  C++ ermöglicht sowohl die effiziente und 
maschinennahe Programmierung als auch eine Programmierung auf hohem Abstraktionsniveau
Quellcode: Text eines Programmes
Compiler: Übersetzer der Programiersprache für den Computer
Linker: Verbindung zwischen unterschiedlichen Programmen / Verlinkungen
Objektcode: Zwischenergebnis des Compilers in Maschinencode
Ausführbare Datei: Datei die vom System ausgeführt werden kann, bsp: .exe .bat
Main(): in der Main Methoden werden Funktionen, Ein- und Ausgaben und Co aufgerufen
#include: fügt Header Dateien in das Programm ein
Kommentar: Dient zur Beschriftung des Texts zum besseren Verständnis
Header: Beschreibt Funktionen die nicht in der Main-Methode direkt enthalten sind, dient zur besseren Aufteilung von Code
Programm: Bestimmte Handlungsanweisungen, die vom Computer ausgeführt werden sollen
Ausgabe: Unterschiedliche Arten von Rückgaben
std::cout: Befehl um Text auf dem Terminal auszugeben
std::cin: Befehl um Text im Terminal einzugeben
<<: Ausgabe in Combi mit cout; sonst bitshift
>>: Eingabe in Combi mit cin; sonst bitshift
Funktion: Unterprogramm mit bestimmter Aufgabe und eventuell Rückgabewerten
Funktionssignatur: Funktionsname + Parameter + Rückgabetyp
Deklaration: Bezeichnung von Funktion, Variablen, Klassen
Definition: Wird vom Compiler benötigt um Speicher zu reservieren, beschreibung des Datentyps
Typ: Typ der Werte/Daten (int usw.)
Typkonvertierung: Umwandlung von Datentypen
Variable: Vorübergehende Reservierung von Speicherplatz für einen gewissen Zweck, Wert variabel
Name: 
Wert: Bestimmter Wert der einer Variable zugeordnet werden kann
Initialisierung: Anweisung für den Compiler einen gewissen Wert anzulegen
Zuweisung: Zuweisung eines Wertes zu einer Variable
const: Eine Unveränderliche Variable
Gültigkeitsbereich: Bereich in dem eine Variable definiert ist
